import React, { useState } from 'react';
import axios from 'axios';

function ImageUploaderWithForm() {
  const [selectedImage, setSelectedImage] = useState(null);
  const [imageId, setImageId] = useState('');
  const [formData, setFormData] = useState({
    name: '',
    description: '',
    imageId: '',
  });

  const handleImageChange = (event) => {
    setSelectedImage(event.target.files[0]);
  };

  const handleUpload = () => {
    const formData = new FormData();
    formData.append('file', selectedImage);

    axios
      .post('http://localhost:9090/upload-image', formData) // Replace with your image upload endpoint
      .then((response) => {
        setImageId(response.data.imageId);
        setFormData({ ...formData, imageId: response.data.imageId });
      })
      .catch((error) => {
        console.error(error);
      });
  };

  const handleFormSubmit = (e) => {
    e.preventDefault();

    // Include other form fields along with the imageId
    const postData = {
      name: formData.name,
      description: formData.description,
      imageId: formData.imageId,
    };

    axios
      .post('http://localhost:9090/submit-form', postData) // Replace with your form submission endpoint
      .then((response) => {
        console.log(response);
        // Handle the form submission response as needed
      })
      .catch((error) => {
        console.error(error);
      });
  };

  return (
    <div>
      <h2>Image Uploader with Form</h2>
      <input type="file" onChange={handleImageChange} />
      <button onClick={handleUpload}>Upload Image</button>
      {imageId && (
        <div>
          <p>Image ID: {imageId}</p>
          <form onSubmit={handleFormSubmit}>
            <label>
              Name:
              <input
                type="text"
                name="name"
                value={formData.name}
                onChange={(e) =>
                  setFormData({ ...formData, name: e.target.value })
                }
              />
            </label>
            <br />
            <label>
              Description:
              <textarea
                name="description"
                value={formData.description}
                onChange={(e) =>
                  setFormData({ ...formData, description: e.target.value })
                }
              ></textarea>
            </label>
            <br />
            <input type="submit" value="Submit Form" />
          </form>
        </div>
      )}
    </div>
  );
}

export default ImageUploaderWithForm;
