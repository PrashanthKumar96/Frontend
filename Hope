import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { useAuth } from './AuthContext';
import { Navigate, useNavigate } from 'react-router-dom';

import './NewSubmissionForm.css'
import EMSHeader from './EMSHeader';

import{LuTextSelect} from 'react-icons/lu'
import{BiCommentAdd} from 'react-icons/bi'
import{MdCalendarMonth} from 'react-icons/md'
import {AiOutlineFileImage} from 'react-icons/ai'


export default function Hope() {
  const { user } = useAuth()
  const navigate = useNavigate()

  const expData = {
    expId: '', // Initialize expId as an empty string
    amount: '',
    approved_date: '',
    category: '',
    employeeDescription: '',
    empId: '',
    image: null,
    mgrId: '',
    status: 'Pending',
    submit_date: '',
    arrvial_city: '',
    expenseDate: '',
  };

  const [formData1, setFormData1] = useState(expData);



  const [formData, setFormData] = useState();
  const [category, setCategory] = useState();
  const [submit_Date, setSubmit_Date] = useState();
  const [expIdImage, setExpIdImage] = useState('');
  const [selectedImage, setSelectedImage] = useState(null);
  const [imageUploadComplete, setImageUploadComplete] = useState(false);


  // Track expId separately
  const handleExpenseTypeChange = (e) => {
    setCategory(e.target.value);

    formData1.category = category

    console.log(category)
  };
  const handleMonth = (e) => {
    setSubmit_Date(e.target.value);

    formData1.submit_date = submit_Date

    console.log(submit_Date)
  };

  const handleInputChange = (e) => {
    setFormData1({ ...formData1, [e.target.name]: e.target.value });
  };

  const handleImageChange = (event) => {
    setSelectedImage(event.target.files[0]);
  };
  const handleUpload = async () => {
    const formData = new FormData();
    formData.append('file', selectedImage);

    try {
      const response = await axios.post('http://localhost:9090/employee/saveFile', formData)
      setExpIdImage(response.data);
      console.log("setting" + expIdImage)

      // Update expId separately


      setImageUploadComplete(true);
    } catch (error) {
      console.error(error);
    }

  };

  useEffect(() => {
    // When imageUploadComplete becomes true, update formData
    if (imageUploadComplete) {


      // Update formData.expId with the separate expId state


      // Continue with form submission



      handleFormSubmit();


    }
  }, [imageUploadComplete, expIdImage]);

  const handleFormSubmit = async () => {
    try {


      formData1.expId = expIdImage;
      formData1.empId = user.empId
      console.log(expIdImage)
      console.log("form expid" + formData1.expId)







      const response = await axios.post('http://localhost:9091/expense/createexpense', formData1);
      console.log(response.data)

    } catch (error) {
      console.error(error);
    }
    navigate('/EmployeeHeader')
  };
  return (

    <>
      <EMSHeader />

      <br data-cvs-id={1469} />
      <form className='subform'>
        <h1 data-cvs-id={1468} className="subhead">
          New Expense
        </h1>
        <fieldset data-cvs-id={1470} className="subfset">

          <div className='form-group'>
            <label>Expense Type <span className='selecticon'><LuTextSelect/></span></label>
            <select name="category" value={formData1.category} onChange={handleExpenseTypeChange}>
              <option value="">Select an expense type</option>
              <option value="Travel">Travel</option>
              <option value="Office Supplies">Office Supplies</option>
              <option value="Relocation">Relocation</option>
              <option value="Medical">Medical</option>
              <option value="Food">Food</option>
              {/* Add more expense types */}
            </select>
          </div>

          <div className='form-group'>
            <label>Select the expense month <span className='monthicon'><MdCalendarMonth/></span></label>
            <select name="submit_date" value={formData1.submit_date} onChange={handleMonth}>
              <option value="">Select a Month</option>
              <option value="January">January</option>
              <option value="February">February</option>
              <option value="March">March</option>
              <option value="April">April</option>
              <option value="May">May</option>
              <option value="June">June</option>
              <option value="July">July</option>
              <option value="August">August</option>
              <option value="September">September</option>
              <option value="October">October</option>
              <option value="November">November</option>
              <option value="December">December</option>
              {/* Add more expense types */}
            </select>
          </div>
          <div className='form-group'>
            <label>Transaction Amount(&#8377;) </label>
            <input
              data-cvs-id={1484}
              type="text"
              name="amount"
              value={formData1.amount}
              onChange={handleInputChange}
              placeholder="Amount"
            />
          </div>

          <div className='form-descr'>
          <span className="commenticon"><BiCommentAdd/></span>
            <label>Description</label>
            <br />
            <textarea
              data-cvs-id={1496}
              placeholder="...."
              name="employeeDescription"
              value={formData1.employeeDescription}
              onChange={handleInputChange}
            ></textarea>
          </div>



          <div className="upicon">
        <AiOutlineFileImage/>
        </div>
          <div className="iconname">
            <label>Upload Image</label>
          </div>
          <div className="form-file">
            <input
              className='up'
              type="file"
              accept="image/*"
              onChange={handleImageChange}
            />



          </div>




          <br data-cvs-id={1497} />

          <p data-cvs-id={1500}>
            This cannot be changed in the associate portal after submission.
          </p>
          <br data-cvs-id={1501} />
          <div data-cvs-id={1502} className="form-btn">
            <button type='button' onClick={handleUpload}>Submit</button>
          </div>
        </fieldset>
      </form>
    </>
  );
}
