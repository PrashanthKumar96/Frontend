You can merge the two React components into a single component by combining their code and maintaining separate Axios requests for the image upload and expense submission. Here's a merged version of your components:

```jsx
import React, { useState } from 'react';
import axios from 'axios';
import ImageUpload from './ImageUpload';

export default function TravelExpense1() {
  const expData = {
    expId: '12997',
    amount: '',
    approved_date: '',
    category: '',
    comments: '',
    empId: '',
    image: null,
    mgrId: '',
    status: '',
    submit_date: '',
    arrvial_city: '',
    expenseDate: '',
  };

  const [formData, setFormData] = useState(expData);
  const [expIdImage, setExpIdImage] = useState('');

  const handleInputChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleImageChange = (expId) => (event) => {
    setExpIdImage(expId); // Update expIdImage with the response from the image upload
    setSelectedImage(event.target.files[0]);
  };

  const handleUpload = () => {
    const formData = new FormData();
    formData.append('file', selectedImage);

    axios
      .post('http://localhost:9090/employee/saveFile', formData)
      .then((response) => {
        setExpIdImage(response.data); // Update expIdImage with the response
        console.log(response.data);
      });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // Now you can include expIdImage in the formData before submitting to the expense API
    const updatedFormData = { ...formData, expId: expIdImage };

    axios
      .post('http://localhost:9090/employee/createexpense', updatedFormData)
      .then((response) => {
        console.log(response);
      });
  };

  return (
    <section data-cvs-id={1467} className="m-6 p-6">
      <h1 data-cvs-id={1468} className="text-heading-06 font-bold my-0">
        Travel Expense Details
      </h1>
      <br data-cvs-id={1469} />
      <form onSubmit={handleSubmit}>
        <fieldset data-cvs-id={1470} className="border-none px-0">
          <div data-cvs-id={1471} className="flex flex-col sm:flex-row gap-4">
            <label>Transaction Amount </label>
            <input
              data-cvs-id={1484}
              type="text"
              name="amount"
              value={formData.amount}
              onChange={handleInputChange}
            />
            <br data-cvs-id={1485} />
          </div>
          <br data-cvs-id={1490} />
          <div>
            <ImageUpload
              onImageChange={handleImageChange(expData.expId)} // Pass the expId from expData
              onUpload={handleUpload}
            />
          </div>
          <br data-cvs-id={1494} />
          <br data-cvs-id={1495} />
          <label>Description</label>
          <br />
          <textarea
            data-cvs-id={1496}
            placeholder="...."
            name="comments"
            value={formData.comments}
            onChange={handleInputChange}
          ></textarea>
          <br data-cvs-id={1497} />
          <br data-cvs-id={1498} />
          <br data-cvs-id={1499} />
          <p data-cvs-id={1500}>
            This cannot be changed in the associate portal after submission.
          </p>
          <br data-cvs-id={1501} />
          <div data-cvs-id={1502} className="space-x-4 mt-16">
            <sdf-button
              onClick={handleSubmit}
              data-cvs-id={1503}
              emphasis="primary"
              className="formbutton1"
              type="submit"
            >
              Submit
            </sdf-button>
          </div>
        </fieldset>
      </form>
    </section>
  );
}
```

In this merged component, we've combined the code from both components while maintaining separate Axios requests for image upload and expense submission. The `expId` returned from the image upload is used to update `expIdImage`, which is later included in the `formData` before submitting to the expense API.
