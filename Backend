To create a Spring Boot REST API endpoint that returns the JSON you provided, you can follow these steps:

1. **Create a Spring Boot Project**:
   Set up a Spring Boot project if you haven't already. You can do this using Spring Initializer or your preferred IDE.

2. **Create a Model Class**:
   Create a Java class to represent the JSON data structure. For your JSON, it would look something like this:

   ```java
   public class Expense {
       private String id;
       private String name;
       private String category;
       private String amount;
       private String status;
       private String description;

       // getters and setters
   }
   ```

3. **Create a Controller**:
   Create a Spring MVC controller that handles the request and returns the JSON data. Here's an example:

   ```java
   import org.springframework.web.bind.annotation.GetMapping;
   import org.springframework.web.bind.annotation.RequestMapping;
   import org.springframework.web.bind.annotation.RestController;

   @RestController
   @RequestMapping("/api")
   public class ExpenseController {

       @GetMapping("/expense")
       public Expense getExpense() {
           Expense expense = new Expense();
           expense.setId("1");
           expense.setName("Virat");
           expense.setCategory("Travel");
           expense.setAmount("6800");
           expense.setStatus("Approved");
           expense.setDescription("description expense 1");
           return expense;
       }
   }
   ```

4. **Run the Application**:
   Run your Spring Boot application. The controller's endpoint will be available at `/api/expense`.

5. **Access the Endpoint**:
   Open a web browser or use a tool like Postman to access the endpoint:
   ```
   http://localhost:8080/api/expense
   ```

   You should receive the JSON response you specified.

Make sure to adjust the package names, port, and any other configurations to match your project's setup. This is a basic example, and in a real application, you would likely fetch this data from a database or another data source rather than hardcoding it in the controller.
